export const double = {
  description:
    'Primitive numeric scalar for floating-point real numbers.\n- Semantics:\n    detail: >\n      Computation aligns with IEEE 754 binary64 (“double precision”).\n      JSON permits only finite numbers; NaN and ±Infinity are invalid Blue nodes.\n\n- Authoring & wrappers:\n    detail: >\n      Scalar sugar (x: 1.25) and wrapped form (x: { value: 1.25 }) are\n      equivalent for authoring; canonical hashing uses the wrapped form\n      (§8.2.2). The type does NOT declare `value` (instance wrapper); putting\n      it on the type would fix an instance payload (§2.1, §4.1).\n\n- Canonical textual form:\n    detail: >\n      RFC 8785 canonical-JSON number: base-10 notation, no leading zeros, no\n      leading "+", optional exponent with lower-case "e", and no unnecessary\n      trailing zeros or decimal point.\n\n- Precision & comparison:\n    detail: >\n      Processors should be aware of binary64 rounding when performing numeric\n      operations. Schema comparisons use the numeric value (per §5.4). Equality\n      and `enum` compare by canonical JSON value semantics, not by byte shape.\n\n- Schema:\n    detail: >\n      §5.4 numeric constraints apply: minimum, maximum, exclusiveMinimum,\n      exclusiveMaximum, multipleOf (> 0).\n',
  name: 'Double',
} as const;
