name: Process Blue Artifacts

on:
  repository_dispatch:
    types: [blue-preprocessor-completed]
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Run ID of the blue-preprocessor workflow'
        required: true
        type: string
      force_all_libraries:
        description: 'Force code generation for all libraries (bypass filtering)'
        required: false
        type: boolean
        default: false
      migration:
        description: 'Migration to run (e.g., "root-index-contents", leave empty for no migration)'
        required: false
        type: string
        default: ''

env:
  BASE_BRANCH: main

jobs:
  ProcessArtifacts:
    name: Process Blue Artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      TRIGGER_LABEL: ${{ github.event_name == 'repository_dispatch' && 'blue-preprocessor (auto)' || github.event_name == 'workflow_dispatch' && 'manual (developer)' || github.event_name }}
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history
          ref: ${{ env.BASE_BRANCH }} # Checkout the base branch directly

      - name: Download blue-repository artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.WORKFLOW_PAT }}
          workflow: blue-preprocessor.yml
          run_id: ${{ github.event.client_payload.run_id || inputs.run_id }}
          name: blue-repository
          repo: bluecontract/blue-repository
          path: data/blue-repository

      - name: Download blue-preprocessed artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.WORKFLOW_PAT }}
          workflow: blue-preprocessor.yml
          run_id: ${{ github.event.client_payload.run_id || inputs.run_id }}
          name: blue-preprocessed
          repo: bluecontract/blue-repository
          path: data/blue-preprocessed

      - name: Display content of blue-ids.yaml
        run: |
          echo "Content of blue-ids.yaml:"
          cat data/blue-preprocessed/blue-ids.yaml

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run script
        run: |
          ARGS=""
          if [ "${{ inputs.force_all_libraries }}" = "true" ]; then
            ARGS="$ARGS --force-all"
          fi
          if [ "${{ inputs.migration }}" != "" ]; then
            ARGS="$ARGS --migration ${{ inputs.migration }}"
          fi
          npm run artifact-scaffolder -- $ARGS

      - name: Update dependencies and package-lock.json
        run: npm install

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.WORKFLOW_PAT }}
          branch: 'blue-artifacts/${{ github.event_name }}/run-${{ github.event.client_payload.run_id || inputs.run_id }}'
          title: 'feat: update generated Blue artifacts (run ${{ github.event.client_payload.run_id || inputs.run_id }}, trigger: ${{ env.TRIGGER_LABEL }})'
          body: |
            This PR contains automatically generated Blue artifacts.

            ## Configuration
            - Trigger: ${{ env.TRIGGER_LABEL }}
            - Run ID: ${{ github.event.client_payload.run_id || inputs.run_id }}
            - Force all libraries: ${{ inputs.force_all_libraries }}
            - Migration: ${{ inputs.migration || 'none' }}

            ## Changes
            - Updated blue-ids exports
            - Updated zod schemas  
            - Updated contents exports
            ${{ inputs.migration && format('- Ran migration: {0}', inputs.migration) || '' }}

            Generated by the process-blue-artifacts workflow.
          base: ${{ env.BASE_BRANCH }}
          commit-message: 'feat: update generated Blue artifacts'
          labels: automated-pr, blue-artifacts

      # - name: Enable Pull Request Automerge
      #   if: steps.cpr.outputs.pull-request-operation == 'created'
      #   uses: peter-evans/enable-pull-request-automerge@v3
      #   with:
      #     token: ${{ secrets.WORKFLOW_PAT }}
      #     pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
